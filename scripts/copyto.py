#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sat Jul  2 00:21:57 2011

import wx
import sys
import os
import shutil
import pickle


exit_code = 0 
# begin wxGlade: extracode
# end wxGlade
class CopyToDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CopyToDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.sizer_1_staticbox = wx.StaticBox(self, -1, "Copy To:")
        #self.tree_ctrl_1 = wx.TreeCtrl(self, -1, style=wx.TR_HAS_BUTTONS|wx.TR_DEFAULT_STYLE|wx.SUNKEN_BORDER)

        #Dir Tree
        self.tree_ctrl_1 = wx.GenericDirCtrl(self, -1, \
                                             dir='/home/', \
                                             style=wx.DIRCTRL_DIR_ONLY)
        
        tree = self.tree_ctrl_1.GetTreeCtrl() #For Bind Event
        
        self.ButtonCancel = wx.Button(self, -1, "Cancel")
        self.ButtonOk = wx.Button(self, -1, "Copy")

        self.Bind(wx.EVT_BUTTON, self.__OnButtonClickCancel, self.ButtonCancel)
        self.Bind(wx.EVT_BUTTON, self.__OnButtonClickOk, self.ButtonOk)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: CopyToDialog.__set_properties
        self.SetTitle("dialog_1")
        self.SetSize((300, 400))
        self.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CopyToDialog.__do_layout
        sizer_1 = wx.StaticBoxSizer(self.sizer_1_staticbox, wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 2, 0, 0)
        sizer_1.Add(self.tree_ctrl_1, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.ButtonCancel, 0, 0, 0)
        grid_sizer_1.Add(self.ButtonOk, 0, wx.ALIGN_RIGHT, 0)
        sizer_1.Add(grid_sizer_1, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def __OnButtonClickOk(self,event):        
        selected_path = self.tree_ctrl_1.GetPath()
        global exit_code
        try:
            filename = sys.argv[1]        
            if not os.path.exists (filename):
                sys.stderr.write (filename + ' is not exists' + '\n')
                self.Destroy()
        except:
            sys.stderr.write ('Error 123')
            exit_code = -3
            self.Destroy()
            
        fl = open(filename, "r")        
        for line in fl:            
            try:                
                tmp_filename = os.path.normpath(line.strip ('\n'))                
                if os.path.isfile(tmp_filename):
                    #sys.stderr.write ('file exist - true'+'\n')
                    shutil.copy2(tmp_filename, selected_path)
                    #sys.stderr.write ('src:'+ tmp_filename + \
                    #                  ' dst:'+ selected_path + ' - copy OK' + '\n')
                else:
                    sys.stderr.write ('file exist - false'+'\n')
                    exit_code = -1
            except IOError:
                sys.stderr.write ('* Err Info :'+ str(sys.exc_info () [0])+'\n')
                sys.stderr.write ('* Err Info :'+ str(sys.exc_info () [1])+'\n')
                sys.stderr.write ('src:'+ tmp_filename + \
                                  ' dst:'+ selected_path + ' - copy NOT OK' + '\n')
                exit_code = -2        
        fl.close ()
        self.Destroy()

    def __OnButtonClickCancel(self,event):        
        self.Destroy()

# end of class CopyToDialog


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    dialog_1 = CopyToDialog(None, -1, "")
    app.SetTopWindow(dialog_1)
    dialog_1.Show()
    app.MainLoop()
    sys.exit (exit_code)
    #print 'exit'
