# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Tue May 03 13:05:25 2011

import wx
import sys
import os
import zzThmbPanel
import zzScriptPanel
import zzPreviewImgPanel
import zzImageLst
import zzScriptLst
import zzThreads
import zzShare
import time

#import Publisher
from wx.lib.pubsub import Publisher

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class zzMainFrame(wx.Frame):
    '''Main Frame Window'''
    def __init__(self, *args, **kwds):
        # begin wxGlade: zzMainFrame.__init__        
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)


        #TO DO:<---Load values from ini file or zzShare.LoadIniFile ('')

        self.zzthmb_panel_height      = zzShare.DEFAULT_THMB_PANEL_HEIGHT        
        self.is_started_LoadImgThread = False
        self.new_dir_select           = False        
        self.selected_path            = ''
        self.need_close_main_form     = False

        
        self.window_1 = wx.SplitterWindow(self, -1, \
                                          style=wx.SP_3D|wx.SP_BORDER|wx.SP_LIVE_UPDATE)
        
        self.window_1_pane_1 = wx.Panel(self.window_1, -1) #Left Window (On Main Frame)
        self.window_1_pane_2 = wx.Panel(self.window_1, -1) #Right Window (On Main Frame)      
        
        self.window_2 = wx.SplitterWindow(self.window_1_pane_2, -1, \
                                          style=wx.SP_3DSASH|wx.SP_LIVE_UPDATE)
        
        self.window_2_pane_1 = wx.Panel(self.window_2, -1) #Right Top Window (Preview Image Window)
        self.window_2_pane_2 = wx.Panel(self.window_2, -1) #Right Bottom Window (Thumbnails Window)
        
        
        self.notebook_1 = wx.Notebook(self.window_1_pane_1, -1, style=0)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, -1)
        self.notebook_1_pane_3 = wx.Panel(self.notebook_1, -1)
        self.notebook_1_pane_4 = wx.Panel(self.notebook_1, -1)

        #Dir Tree
        self.dir_tree_ctrl = wx.GenericDirCtrl(self.notebook_1_pane_1, -1, \
                                               dir='/home/', \
                                               style=wx.DIRCTRL_DIR_ONLY)        
        tree = self.dir_tree_ctrl.GetTreeCtrl() #For Bind Event
        
        #ImageLst
        self.img_lst  = zzImageLst.zzImageLst()
        
        #ScriptLst
        self.scrpt_lst = zzScriptLst.zzScriptLst (image_lst = self.img_lst)
        self.scrpt_lst.LoadXML (zzShare.FILENAME_SCRIPTS_XML)                                                    

        #Preview panel
        self.prevw_img_pnl = zzPreviewImgPanel.zzPreviewImgPanel (self.window_2_pane_1, \
                                                                  self.img_lst)
        #Thumbail panel
        self.thmb_pnl = zzThmbPanel.zzThmbPanel (self.window_2_pane_2, \
                                                 self.img_lst, \
                                                 self.prevw_img_pnl, \
                                                 self.scrpt_lst)
        
        #Script Panel                
        self.notebook_1_script_pnl = zzScriptPanel.zzScriptPanel(self.notebook_1, \
                                                                 self.img_lst, \
                                                                 self.thmb_pnl, \
                                                                 self.scrpt_lst)

        #Additional Button "Toolbar..."
        self.button_1 = wx.Button(self.window_2_pane_2, -1, "button_1")
        
        # Menu Bar
        self.frame_2_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "Exit", "", wx.ITEM_NORMAL)
        self.frame_2_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        self.frame_2_menubar.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.frame_2_menubar)
        # Menu Bar end

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        #Bind Event        
        self.Bind(wx.EVT_CLOSE, self.__OnClose)
        self.Bind(wx.EVT_SHOW, self.__OnShow, self)
        self.Bind(wx.EVT_SIZE, self.__OnSize)
        self.Bind(wx.EVT_SPLITTER_SASH_POS_CHANGING, self.__OnSpliterWin2Changing, self.window_2)
        self.Bind(wx.EVT_BUTTON, self.__OnButtonClick, self.button_1)
        self.Bind(wx.EVT_TREE_SEL_CHANGED, self.__OnDirSelect, id = tree.GetId())
        
        # create a pubsub receiver
        Publisher().subscribe(self.__UpdateThmbPanel, "zzMESSAGE_UPDATE_THMB_WIN")

        
    def __set_properties(self):
        # begin wxGlade: zzMainFrame.__set_properties
        self.SetTitle("Main Frame")
        self.SetSize((800, 600))
        self.prevw_img_pnl.SetBackgroundColour(wx.Colour(200, 200, 205))        
        self.thmb_pnl.SetBackgroundColour(wx.Colour(195, 200, 200))
        self.button_1.Hide ()
        
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: zzMainFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)        
        
        sizer_7.Add(self.dir_tree_ctrl, 1, wx.EXPAND, 0)        
        self.notebook_1_pane_1.SetSizer(sizer_7)        
        self.notebook_1.AddPage(self.notebook_1_pane_1, "Folders")
        self.notebook_1.AddPage(self.notebook_1_script_pnl, "Action")
        self.notebook_1.AddPage(self.notebook_1_pane_3, "Category")
        self.notebook_1.AddPage(self.notebook_1_pane_4, "Exiv")
        
        sizer_2.Add(self.notebook_1, 1, wx.ALL|wx.EXPAND, 2)        
        self.window_1_pane_1.SetSizer(sizer_2)
        
        sizer_4.Add(self.prevw_img_pnl, 1, wx.ALL|wx.EXPAND, 3)
        self.window_2_pane_1.SetSizer(sizer_4)
        
        sizer_6.Add(self.button_1, 0, 0, 0)
        sizer_5.Add(sizer_6, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 3)
        sizer_8.Add(self.thmb_pnl, 1, wx.RIGHT|wx.BOTTOM|wx.EXPAND, 3)
        sizer_5.Add(sizer_8, 1, wx.ALL|wx.EXPAND, 3)
        self.window_2_pane_2.SetSizer(sizer_5)
        self.window_2.SplitHorizontally(self.window_2_pane_1, self.window_2_pane_2)
        sizer_3.Add(self.window_2, 1, wx.EXPAND, 0)
        self.window_1_pane_2.SetSizer(sizer_3)
        self.window_1.SplitVertically(self.window_1_pane_1, self.window_1_pane_2)
        sizer_1.Add(self.window_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade


    #***** Events ****
    def __OnClose (self, event):
        '''Close MainFrame. if thread (loadimg) runing, send message stop ang wait confirmation'''
        zzThreads.ThreadsLoadImgWait ()
        zzThreads.ThreadsUpdateImgWait ()        
        self.Destroy()
        
        
    def __OnSize (self,event):
        '''Change Main Frame size'''
        h=self.GetClientRect().GetHeight ()
        self.window_1.SetSashPosition (180)
        self.window_2.SetSashPosition (h - self.zzthmb_panel_height)
        event.Skip()

        
    def __OnShow (self,event):
        '''Show Main Frame Window'''
        if self.thmb_pnl:
            self.thmb_pnl.SetFocus ()
        event.Skip()


    def __OnSpliterWin2Changing (self,event):
        '''Change height thmb panel'''
        self.zzthmb_panel_height = self.GetClientRect().GetHeight () - self.window_2.GetSashPosition ()        
    
               
    def __OnDirSelect (self, event):
        '''User slected Folder in tree_ctrl_1 - Run LoadImgThread...'''
        #zzShare.print_ln ('__OnDirSelect - start')
        selected_path = self.dir_tree_ctrl.GetPath()        
        zzThreads.ThreadsLoadImgWait ()
        zzThreads.ThreadsUpdateImgWait ()
        self.img_lst.ClearAll()        
        zzThreads.LoadImgFromDir (selected_path, self.img_lst)
        #zzShare.print_ln ('__OnDirSelect - end') 

        
    def __UpdateThmbPanel(self, msg):
        '''Run..., when get recieve message from LoadImg_Thread, after (load Image)'''
        self.thmb_pnl.RepaintThmb ()        

            
    def __OnButtonClick(self,event):
        sys.stderr.write ('__OnButtonClick'+'\n')

# end of class zzMainFrame




